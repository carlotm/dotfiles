vim9script

# Plugins {{{
var data_dir = "~/.vim"
if empty(glob(data_dir .. "/autoload/plug.vim"))
	silent execute "!curl -fLo " .. data_dir .. "/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
	autocmd VimEnter * PlugInstall --sync
endif

plug#begin("~/.vim/plugged")
Plug 'SirVer/ultisnips'
Plug 'alvan/vim-closetag'
Plug 'editorconfig/editorconfig-vim'
Plug 'elixir-editors/vim-elixir'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'moll/vim-bbye'
Plug 'mustache/vim-mustache-handlebars'
Plug 'nelsyeung/twig.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-endwise'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
plug#end()
# }}}

# Vim settings {{{
set nocompatible
filetype on
filetype plugin on
filetype indent on
syntax on
set autoread
set background=dark
set expandtab tabstop=4 shiftwidth=4
set fillchars+=vert:\│
set foldmethod=marker
set ignorecase smartcase
set incsearch hlsearch
set list
set listchars=tab:˪\ 
set modeline
set nobackup
set noshowcmd
set scrolloff=10
set showmatch
set swapfile
set dir=~/.cache
nnoremap <SPACE> <Nop>
g:mapleader = " "
au VimEnter * set mouse=
# }}}

# Filetypes {{{
augroup ft_erlang_config
	au!
	autocmd BufRead,BufNewFile *.config set filetype=erlang
	autocmd BufRead,BufNewFile *.config.src set filetype=erlang
	autocmd BufRead,BufNewFile *.app.src set filetype=erlang
	autocmd BufRead,BufNewFile *.app.src.script set filetype=erlang
	autocmd BufRead,BufNewFile *.escript set filetype=erlang
augroup END
augroup ft_heex
	au!
	au BufRead,BufNewFile *.heex set filetype=eelixir
augroup END
augroup ft_django_templates
	au!
	au BufRead,BufNewFile *.tpl set filetype=htmldjango
	au BufRead,BufNewFile *.dtl set filetype=htmldjango
augroup END
# }}}

# Netrw {{{
g:netrw_banner = 0
g:netrw_localcopydircmd = 'cp -r'
g:netrw_cursor = 0
# }}}

# Colors {{{
augroup colors_overrides
	au!
	au BufRead * hi Comment ctermfg=240
augroup end

hi ExtraWhitespace ctermbg=1
hi SpecialKey ctermfg=235
hi Folded ctermbg=234 ctermfg=6
hi Visual ctermbg=236
hi VertSplit ctermfg=21 ctermbg=16 cterm=NONE
hi StatusLine ctermfg=15 ctermbg=21 cterm=NONE
hi StatusLineNC ctermfg=8 ctermbg=234
hi SignColumn ctermbg=0
hi netrwTreeBar ctermfg=0
hi Pmenu ctermbg=234 ctermfg=15
hi PmenuSel ctermbg=5 ctermfg=15
hi PmenuSbar ctermbg=234
hi PmenuThumb ctermbg=236

match ExtraWhitespace /\s\+$/
# }}}

# FZF {{{
g:fzf_preview_window = ['down:50%', 'ctrl-/']
g:fzf_layout = {
	'window': {
		'width': 1,
		'height': 1,
		'relative': v:true,
		'yoffset': 1.0,
		'border': 'no'
	}
}
# }}}

# UltiSnips {{{
g:UltiSnipsSnippetDirectories = ["~/.UltiSnips"]
g:UltiSnipsExpandTrigger = "<space>"
# }}}

# LSP {{{
g:asyncomplete_auto_completeopt = 0
set completeopt=menuone,noinsert,noselect
# }}}

# Key mappings {{{
noremap <Left> <Nop>
noremap <Right> <Nop>
noremap <Up> <Nop>
noremap <Down> <Nop>
vnoremap < <gv
vnoremap > >gv
nnoremap < <<
nnoremap > >>
nnoremap gn :bnext<CR>
nnoremap gp :bprev<CR>
nnoremap gd :LspDefinition<CR>
nnoremap gr :LspReferences<CR>
nnoremap <Leader>bd :Bdelete<CR>
nnoremap <Leader>ww :wincmd w<CR>
nnoremap <Leader>ff :GFiles<CR>
nnoremap <Leader>fa :Files<CR>
nnoremap <Leader>fb :Buffers<CR>
nnoremap <Leader>fg :Rg<CR>
# nnoremap <Leader>e :LspDiagCurrent<CR>
nnoremap K :LspHover<CR>
nnoremap ff :LspDocumentFormat<CR>
inoremap <expr> <TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr> <S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"
inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"
# }}}

# vim: set ts=4 sw=4 tw=0 noet :
