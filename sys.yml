---
- name: System configuration
  hosts: all
  gather_facts: false
  become: true
  tasks:

# Load vars {{{
    - name: Load vars
      ansible.builtin.include_vars:
        file: "./vars/{{ profile }}.yml"
# }}}
# Install packages {{{
    - name: Force uninstall packages
      ansible.builtin.apt:
        state: absent
        purge: true
        pkg:
          - cups
          - cups-browsed
          - cups-client
          - cups-common
          - cups-core-drivers
          - cups-daemon
          - cups-filters
          - cups-filters-core-drivers
          - cups-ipp-utils
          - cups-pk-helper
          - cups-ppdc
          - cups-server-common
    - name: Common packages
      ansible.builtin.apt:
        update_cache: yes
        state: latest
        pkg:
          - network-manager
          - adwaita-icon-theme
          - build-essential
          - bash-completion
          - curl
          - fonts-spleen
          - fonts-noto
          - fonts-noto-color-emoji
          - pavucontrol
          - pulseaudio
          - stow
          - vim
          - wget
          - xdg-user-dirs
          - xorg
    - name: User packages
      ansible.builtin.apt:
        state: latest
        pkg: "{{ sys.packages | default([]) }}"
# }}}
# Hostname {{{
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ sys.hostname }}"
# }}}
# Locales {{{
    - name: Ensure a locale exists
      community.general.locale_gen:
        name: "{{ item }}"
        state: present
      loop:
        - en_US.UTF-8
        - it_IT.UTF-8
        - de_DE.UTF-8
# }}}
# User and groups {{{
    - name: Create base groups
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      loop:
        - users
        - "{{ sys.user.username }}"
        - sudo
        - wheel
    - name: "Create user {{ sys.user.name }}"
      ansible.builtin.user:
        name: "{{ sys.user.username }}"
        shell: /bin/bash
        groups:
          - audio
          - bluetooth
          - cdrom
          - floppy
          - input
          - kvm
          - sudo
          - tty
          - users
          - video
          - wheel
    - name: Put user in sudoers
      ansible.builtin.copy:
        src: "templates/sudoer_{{ sys.user.username }}"
        dest: "/etc/sudoers.d/{{ sys.user.username }}"
        owner: root
        group: root
        mode: "0440"
# }}}
# Vim {{{
    - name: Configure vim
      ansible.builtin.copy:
        src: ./templates/vimrc.local
        dest: /etc/vim/vimrc.local
        owner: root
        group: root
        mode: "0666"
# }}}
# Git {{{
    - name: Configure git
      community.general.git_config:
        name: "{{ item.n }}"
        scope: system
        value: "{{ item.v }}"
      loop:
        - {n: core.editor, v: vim}
        - {n: user.name, v: sys.user.name}
        - {n: user.username, v: sys.user.username}
        - {n: user.email, v: sys.user.email}
        - {n: alias.s, v: status}
        - {n: alias.co, v: checkout}
# }}}
# Services {{{
    - name: System services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
      loop:
        - sshd
# }}}
# Network {{{
#   - name: Configure home wifi connection
#     community.general.nmcli:
#       type: wifi
#       conn_name: Casa
#       ifname: "{{ sys.net.interface }}"
#       ssid: AscaniFerretti
#       ip4: "{{ sys.net.ip }}"
#       gw4: "192.168.1.1"
#       method6: "disabled"
#       wifi_sec:
#         key-mgmt: wpa-psk
#         psk: "g:B4$1F\\A\\@X."
#       autoconnect: yes
#       state: present
#   - name: Restart NetworkManager
#     ansible.builtin.systemd:
#       name: NetworkManager
#       state: restarted
#       enabled: true
# }}}
